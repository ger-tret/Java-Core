name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: serviceuser
          POSTGRES_PASSWORD: 123456789
          POSTGRES_DB: user_service
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'


      - name: Build with Maven
        run: mvn clean compile -DskipTests

      - name: Run tests
        run: mvn test
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/user_service
          SPRING_DATASOURCE_USERNAME: serviceuser
          SPRING_DATASOURCE_PASSWORD: 123456789
          SPRING_REDIS_HOST: localhost
          SPRING_REDIS_PORT: 6379

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        if: github.ref == 'refs/heads/main'

      - name: Build JAR
        run: mvn package -DskipTests


      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: user-service:latest
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: |
            Dockerfile
            target/*.jar
          retention-days: 1

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
